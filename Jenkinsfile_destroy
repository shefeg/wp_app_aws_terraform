node {
    parameters {
        choice(choices: 'dev\nprod', description: 'What Wokspace?', name: 'WORKSPACE')
    }
    stage ('Container preparation') {
        checkout(
                [$class: 'GitSCM',
                branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false,
                extensions: [[$class: 'CleanBeforeCheckout']], submoduleCfg: [],
                userRemoteConfigs: [[url: 'https://github.com/shefeg/wp_app_aws_terraform.git']]]
                )
        // def container = docker.build('container')
        def container = docker.build('container', '-f Dockerfile_data .')
        container.inside {
            stage ('Checkout') {
                git url: 'https://github.com/shefeg/wp_app_aws_terraform.git'
            }
        
            stage ('Test Terraform') {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws_credentials',
                accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                    sh 'terraform --version && terraform init && sh "terraform workspace new ${params.WORKSPACE} \
                    && terraform validate && terraform plan'
                }
            }
            stage ('Terraform Destroy') {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws_credentials',
                accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                    env.ANSWER = input message: 'Do you really want to destroy?'
                    sh 'terraform destroy -force'
                }
            }
        }
    }
}